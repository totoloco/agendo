=============================
 Leeme si vas a tocar Agendo
=============================


Dependencias
============

Agendo se está desarrollando con la siguiente plataforma como base:

    - Python 2.7;
    - Django 1.2 con la aplicación ``django_registration``.

En Arch Linux, se pueden instalar estas dependencias con los siguientes
comandos::

    # pacman -S django
    # easy-install-2.7 django_registration


Instalación
===========

1. Copiar ``settings.template.py`` como ``settings.py``, editando las rutas de
   directorios y archivos, las que dicen USUARIO.

2. Generar la base de datos::

       $ ./manage.py syncdb

3. Ejecutar el servidor web::

       $ ./manage.py runserver


Actualización
=============

- Si hay parámetros nuevos o cambios relevantes en el ``settings.py``,
  llevarlos al ``settings.template.py`` con algún formato genérico.
- IDEM al revés, si en una actualización se modifica el
  ``settings.template.py``, adaptar los cambios a ``settings.py``.


Actualización de la base de datos
=================================

Con el siguiente comando se actualiza la base de datos::

    $ ./manage.py syncdb


Idioma
======

El idioma principal del proyecto es el **castellano** (es_AR, lunfardo), por
ahora.

En el proyecto se pueden encontrar dos tipos de textos:
    
    1. Aquellos que por practicidad están disponibles en un solo idioma. Se
       incluyen:

           - nombres de archivos y directorios;
           - identificadores propios (de tablas, vistas, campos, etc.) en la
             base de datos;
           - identificadores propios en el código en Python;
           - comentarios en el código en Python;
           - mensajes de envíos/commits al repositorio.

    2. Aquellos que por defecto están en un idioma dado pero se les puede
       agregar traducciones. Se incluyen:

           - cadenas de la interfaz de usuario;
           - archivos de documentación;
           - ¿direcciones URL?

Para ambos se va a usar el idioma principal -castellano-. Los del segundo tipo,
además, van a contar con traducciones a otros idiomas.

Allá donde por limitaciones técnicas no podamos usar el castellano en todo su
esplendor, vamos a buscar la aproximación más oportuna.  Por ejemplo, en los
identificadores de Python sólo podemos usar caracteres alfanuméricos ASCII y el
guion bajo, así que vamos a prescindir de las tildes y reemplazar la “ñ” por
“ni” o “nn” (el primer dígrafo es más fiel fonológicamente; el segundo,
etimológicamente).


Estilo
======

Nuestro estilo para el código en Python se basa en la **Guía de Estilo para
Código Python**, recogida en el PEP8_.  Con algunas salvedades:

    - como ya se explicó, los identificadores van a estar en castellano;
    - los comentarios no van a limitarse a ASCII, ya que se tienen que poder
      escribir en auténtico castellano.

Para la documentación, usamos el formato de marcado reStructuredText_.

.. _PEP8: http://python.org/dev/peps/pep-0008/
.. _reStructuredText: http://docutils.sourceforge.net/rst.html


Aplicación
==========

La aplicación principal se llama **alumnos**.


Filosofía
=========

La idea es que sea simple y sin repetirnos (KISS & DRY). Todo bajo un sistema
democrático, en un futuro quizás sea meritocrático.


Colaboradores
=============

- Realizado por la comunidad de Jumanji (#archlinux-co en irc.freenode.net).
- Colaboran: himito, juanorejas, mctpyt, yipman, totoloco.
